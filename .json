{"id":1,"tags":[""],"content":"import View.Style\nimport javafx.geometry.Insets\nimport javafx.geometry.Pos\nimport javafx.scene.control.*\nimport javafx.scene.image.Image\nimport javafx.scene.image.ImageView\nimport javafx.scene.layout.*\nimport javafx.scene.paint.Color\nimport javafx.scene.text.Text\nimport javafx.stage.Stage\nimport speech_to_text.SpeechToText\n\nimport javafx.scene.web.WebView;\nimport javafx.stage.FileChooser\nimport java.io.File\n\nclass Controller\n\nclass AddEditNoteView(val stage: Stage, val model: Model, val note: Note, val isNew: Boolean = true) : VBox(), View {\n    var images = mutableListOf<ImageView>()\n    var mode = false\n    init {\n        updateView()\n    }\n\n\n    override fun updateView() {\n        children.clear()\n        var title = TextField(note.title)\n        title.style = \"\"\"\n            .text-field {\n               -fx-font-family: \"Quicksand\";\n               -fx-font-size: 19;\n               -fx-padding: 1,1,1,1;\n               -fx-border-color: #DAA520;\n               -fx-border-width: 2;\n               -fx-border-radius: 1;\n               -fx-border: gone;\n               -fx-background-color: #F5F5DC;\n               -fx-text-fill: #0;\n            }\"\"\".trimIndent()\n        title.minWidth = 1000.0\n        val imageImport = Button(\"Import Image\")\n        imageImport.style = \"\"\"\n              * {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #DAA520;\n        }\"\"\".trimIndent()\n        imageImport.minHeight = 25.0\n        imageImport.minWidth = 55.0\n\n\n        val titleConstantView = Text(\"Title: \")\n        val titleView = HBox(imageImport, titleConstantView, title)\n        var tag = TextField()\n        if (note.tags != null && note.tags!!.count() > 0) {\n            tag.text = note.tags!![0]\n        }\n\n        tag.style = \"\"\".text-field {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-color: #DAA520;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #0;\n        }\"\"\".trimIndent()\n\n        val tagConstantView = Text(\"Tags: \")\n\n        val modeButton = ToggleButton(\"Mode\")\n        modeButton.style = \"\"\"\n              * {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #DAA520;\n        }\"\"\".trimIndent()\n\n        val tagView = HBox(modeButton, tagConstantView, tag)\n        tag.minWidth = 1000.0\n        tagView.spacing = 100.0\n        titleView.spacing = 100.0\n\n        title.alignment = Pos.BASELINE_LEFT\n        tag.alignment = Pos.BASELINE_LEFT\n\n        tagView.alignment = Pos.BASELINE_RIGHT\n        titleView.alignment = Pos.BASELINE_RIGHT\n\n        val contents = HBox()\n        contents.minWidth = 1300.0\n\n        val content = TextArea()\n        content.isWrapText = true\n        content.prefRowCount = 35\n        content.prefColumnCount = 20\n\n        content.text = note.content\n        content.maxWidth = 600.0\n        content.minWidth = 600.0\n\n        content.style = \"\"\"\n        -fx-control-inner-background: #F5F5DC;\n        \"\"\".trimIndent()\n        content.background = Background(BackgroundFill(Color.BEIGE, CornerRadii(10.0), Insets(10.0)))\n\n        val imageSection = ScrollPane()\n        imageSection.maxWidth = 850.0\n        imageSection.minWidth = 850.0\n        imageSection.isFitToHeight = false\n        imageSection.isFitToWidth = true\n\n        imageSection.hbarPolicy = ScrollPane.ScrollBarPolicy.NEVER\n\n        contents.children.addAll(content, imageSection)\n\n\n        background = Background(BackgroundFill(Color.hsb(37.1, 0.5, 0.7, 0.6), CornerRadii.EMPTY, Insets.EMPTY))\n\n        val save = Button(\"Save\")\n        save.setOnAction { event ->\n            val titleText = title.text\n            note.title = titleText\n            note.tags = mutableListOf(tag.text)\n            note.content = content.text\n            model.save(note)\n            stage.close()\n        }\n        save.style = \"\"\"\n            .text-area {\n               -fx-font-family: \"Quicksand\";\n               -fx-font-size: 29;\n               -fx-padding: 1,1,1,1;\n               -fx-border-width: 2;\n               -fx-border-radius: 3;\n               -fx-border: gone;\n               -fx-background-color: #F5F5DC;\n               -fx-text-fill: #DAA520;\n            }\n        \"\"\".trimIndent()\n        val cancel = Button(\"Cancel\")\n        cancel.style = \"\"\"\n            .text-area .content {\n               -fx-font-family: \"Quicksand\";\n               -fx-font-size: 29;\n               -fx-padding: 1,1,1,1;\n               -fx-border-width: 2;\n               -fx-border-radius: 3;\n               -fx-border: gone;\n               -fx-background-color: #F5F5DC;\n               -fx-text-fill: #DAA520;\n            }\n        \"\"\".trimIndent()\n        val speechToTextButton = Button(\"Speech To Text\")\n        speechToTextButton.style = \"\"\"\n              * {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #DAA520;\n        }\"\"\".trimIndent()\n\n        cancel.setOnMouseClicked {\n            stage.close()\n        }\n\n        val compile = Button(\"Compile\")\n        compile.style = \"\"\"\n              * {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #DAA520;\n        }\"\"\".trimIndent()\n\n\n        imageImport.setOnMouseClicked {\n            val fileStage = Stage()\n            val fileChooser = FileChooser()\n            fileChooser.title = \"Open an Image\"\n            fileChooser.initialDirectory = File(\"./\")\n            var file = fileChooser.showOpenDialog(fileStage)\n\n            if (file != null) {\n                val image = Image(file.toURI().toString())\n                val imageView = ImageView(image)\n                images.add(imageView)\n                //setting the fit height and width of the image view\n                imageView.setFitHeight(600.0);\n                imageView.setFitWidth(800.0);\n\n                imageView.minHeight(600.0);\n                imageView.minWidth(800.0);\n\n                //Setting the preserve ratio of the image view\n                imageView.setPreserveRatio(true);\n                val imageContent = VBox()\n                imageContent.children.addAll(images)\n                imageSection.content = imageContent\n\n//                contents.right = Group(imageView)\n\n//                val imageStage = Stage()\n//                val root = Group(imageView)\n//                imageStage.scene = Scene(root)\n//                imageStage.show()\n            }\n\n        }\n\n        save.minWidth = 250.0\n        cancel.minWidth = 250.0\n        speechToTextButton.minWidth = 250.0\n        compile.minWidth = 250.0\n        save.minHeight = 90.0\n        cancel.minHeight = 90.0\n        compile.minHeight = 90.0\n        speechToTextButton.minHeight = 90.0\n        speechToTextButton.setOnAction {\n            content.text += SpeechToText.listen()\n        }\n\n        titleConstantView.style = \"\"\"\n            * {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #DAA520;\n        \"\"\".trimIndent()\n\n        tagConstantView.style = \"\"\"\n            * {\n           -fx-font-family: \"Quicksand\";\n           -fx-font-size: 19;\n           -fx-padding: 1,1,1,1;\n           -fx-border-width: 2;\n           -fx-border-radius: 1;\n           -fx-border: gone;\n           -fx-background-color: #F5F5DC;\n           -fx-text-fill: #DAA520;\n        \"\"\".trimIndent()\n\n        fun fetchWebView() {\n            val webView = WebView()\n            val webEngine = webView.engine\n            webEngine.loadContent(\"<script src=\\\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\\\"></script>\" +\n                    \"<pre class=\\\"prettyprint\\\">\" + content.text +\n                    \"</pre>\", \"text/html\")\n\n\n            imageSection.content = webView\n\n            webView.style = Style.webViewStyle\n            webView.maxWidth = 850.0\n            webView.minWidth = 850.0\n        }\n\n        compile.setOnMouseClicked {\n            fetchWebView()\n        }\n\n        modeButton.setOnAction {\n            mode = !mode\n            if (mode) {\n                fetchWebView()\n            } else {\n                val imageContent = VBox()\n                imageContent.children.addAll(images)\n                imageSection.content = imageContent\n            }\n        }\n\n        var returnMenu = HBox()\n        returnMenu.children.addAll(save, cancel, speechToTextButton, compile)\n        returnMenu.maxHeight = 150.0;\n\n        returnMenu.alignment = Pos.CENTER\n        returnMenu.spacing = 100.0\n        AnchorPane.setLeftAnchor(tag, 10.0)\n        AnchorPane.setRightAnchor(tag, 10.0)\n        AnchorPane.setLeftAnchor(title, 10.0)\n        AnchorPane.setRightAnchor(title, 10.0)\n        children.addAll(titleView, tagView, contents, returnMenu)\n    }\n\n\n}\n"}